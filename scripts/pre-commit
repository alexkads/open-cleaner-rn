#!/bin/bash

# Pre-commit hook para prevenir conflitos
# Instalar: cp scripts/pre-commit .git/hooks/ && chmod +x .git/hooks/pre-commit

set -e

echo "üîç Verificando antes do commit..."

# Verificar se h√° conflitos n√£o resolvidos
if grep -r "<<<<<<< HEAD" . --exclude-dir=.git --exclude-dir=node_modules --exclude-dir=target; then
    echo "‚ùå Encontrados marcadores de conflito n√£o resolvidos!"
    echo "üõ†Ô∏è  Resolva os conflitos antes de fazer commit"
    exit 1
fi

# Verificar se package-lock.json e pnpm-lock.yaml est√£o sincronizados
if [ -f "package-lock.json" ] && [ -f "pnpm-lock.yaml" ]; then
    echo "‚ö†Ô∏è  Aviso: package-lock.json e pnpm-lock.yaml presentes"
    echo "üí° Considere usar apenas um gerenciador de pacotes"
fi

# Verificar formata√ß√£o de arquivos importantes
echo "üìù Verificando formata√ß√£o..."

# Verificar YAML syntax nos workflows
for file in .github/workflows/*.yml .github/workflows/*.yaml; do
    if [ -f "$file" ]; then
        if ! python -c "import yaml; yaml.safe_load(open('$file'))" 2>/dev/null; then
            echo "‚ùå Erro de sintaxe YAML em: $file"
            exit 1
        fi
    fi
done

# Verificar JSON syntax
for file in *.json src/**/*.json docs-astro/**/*.json; do
    if [ -f "$file" ]; then
        if ! python -c "import json; json.load(open('$file'))" 2>/dev/null; then
            echo "‚ùå Erro de sintaxe JSON em: $file"
            exit 1
        fi
    fi
done

echo "‚úÖ Verifica√ß√µes OK - prosseguindo com commit"
